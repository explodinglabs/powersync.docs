{
  "version": 3,
  "sources": ["../src/domSubscriber.ts", "../src/domPublisher.ts", "../src/refresh.ts", "../src/powersync.ts"],
  "sourcesContent": ["import { Message } from \"./types\";\n\nexport const programmaticEvents: Record<string, boolean> = {};\n\nfunction withProgrammaticEvent(eventType: string, callback: () => void) {\n  programmaticEvents[eventType] = true;\n  requestAnimationFrame(() => {\n    programmaticEvents[eventType] = false;\n  });\n  callback();\n}\n\nconst dispatchers: Record<string, (el, params) => void> = {\n  change: (el, _) => {\n    el.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n  },\n  click: (el) => {\n    el.dispatchEvent(\n      new MouseEvent(\"click\", {\n        bubbles: true,\n        cancelable: true,\n        view: window,\n      })\n    );\n  },\n  input: (el, params) => {\n    if (el instanceof HTMLSelectElement) {\n      // If it's a dropdown, ensure the value is updated and trigger 'change'\n      el.value = params.inputValue;\n      el.dispatchEvent(\n        new Event(\"change\", { bubbles: true, cancelable: true })\n      );\n    } else if (el instanceof HTMLElement && el.isContentEditable) {\n      // Handle input for contenteditable elements\n      el.textContent = params.inputValue; // Sync the text content with the new value\n      el.dispatchEvent(\n        new Event(\"input\", {\n          bubbles: true,\n          cancelable: true,\n        })\n      ); // Dispatch the input event to propagate changes\n    } else {\n      if (el instanceof HTMLInputElement || el instanceof HTMLTextAreaElement) {\n        el.value = params.inputValue;\n      }\n      // Handle input for other types of elements like <input>, <textarea>\n      el.dispatchEvent(new Event(\"input\", { bubbles: true, cancelable: true }));\n    }\n  },\n  keydown: (el, params) => {\n    el.dispatchEvent(\n      new KeyboardEvent(\"keydown\", {\n        bubbles: true,\n        cancelable: true,\n        key: params.inputValue,\n      })\n    );\n  },\n  keyup: (el) => {\n    el.dispatchEvent(\n      new KeyboardEvent(\"keyup\", {\n        bubbles: true,\n        cancelable: true,\n        key: \"\",\n      })\n    );\n  },\n  pointerdown: (el, params) => {\n    el.dispatchEvent(\n      new PointerEvent(\"pointerdown\", {\n        bubbles: true,\n        cancelable: true,\n        clientX: params.pointer.x,\n        clientY: params.pointer.y,\n        pointerId: 1,\n        pointerType: \"touch\",\n        isPrimary: true,\n      })\n    );\n  },\n  pointermove: (el, params) => {\n    el.dispatchEvent(\n      new PointerEvent(\"pointermove\", {\n        bubbles: true,\n        cancelable: true,\n        clientX: params.pointer.x,\n        clientY: params.pointer.y,\n        pointerId: 1,\n        pointerType: \"touch\",\n        isPrimary: true,\n      })\n    );\n  },\n  pointerup: (el, params) => {\n    el.dispatchEvent(\n      new PointerEvent(\"pointerup\", {\n        bubbles: true,\n        cancelable: true,\n        clientX: params.pointer.x,\n        clientY: params.pointer.y,\n        pointerId: 1,\n        pointerType: \"touch\",\n        isPrimary: true,\n      })\n    );\n  },\n  popstate: (el) => {\n    el.dispatchEvent(\n      new PopStateEvent(\"popstate\", {\n        bubbles: true,\n        cancelable: true,\n        state: history.state,\n      })\n    );\n  },\n  pushState: () => {\n    // Note: pushState itself doesn't emit an event \u2014 we can simulate a\n    // \"popstate\" if needed\n    history.pushState({}, \"\", window.location.href);\n  },\n  replaceState: () => {\n    // Similar: replaceState doesn't emit a real event either, but you can call\n    // replaceState manually\n    history.replaceState({}, \"\", window.location.href);\n  },\n  reset: (el) => {\n    el.dispatchEvent(\n      new Event(\"reset\", {\n        bubbles: true,\n        cancelable: true,\n      })\n    );\n  },\n  scroll: (el, params) => {\n    if (el instanceof HTMLElement) {\n      el.scrollTop = params.scroll.y;\n    } else if (el instanceof Document) {\n      document.documentElement.scrollTop = params.scroll.y;\n    } else if (el instanceof Window) {\n      el.scrollTo(params.scroll.x, params.scroll.y);\n    }\n  },\n  submit: (el) => {\n    el.dispatchEvent(\n      new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n      })\n    );\n  },\n  touchend: (el) => {\n    el.dispatchEvent(\n      new TouchEvent(\"touchend\", {\n        bubbles: true,\n        cancelable: true,\n        touches: [],\n        targetTouches: [],\n        changedTouches: [],\n      })\n    );\n  },\n  touchmove: (el) => {\n    el.dispatchEvent(\n      new TouchEvent(\"touchmove\", {\n        bubbles: true,\n        cancelable: true,\n        touches: [],\n        targetTouches: [],\n        changedTouches: [],\n      })\n    );\n  },\n  touchstart: (el) => {\n    el.dispatchEvent(\n      new TouchEvent(\"touchstart\", {\n        bubbles: true,\n        cancelable: true,\n        touches: [],\n        targetTouches: [],\n        changedTouches: [],\n      })\n    );\n  },\n};\n\nexport function handleDomMsg({ type, params }: Message): void {\n  const dispatcher = dispatchers[type];\n  if (dispatcher) {\n    let targetElement: Element | Window = window;\n    if (params.selector) {\n      targetElement = document.querySelector(params.selector) ?? window;\n    }\n\n    withProgrammaticEvent(type, () => {\n      dispatcher(targetElement, params);\n    });\n  }\n}\n", "import { programmaticEvents } from \"./domSubscriber\";\nimport { DomMessage } from \"./types\";\n\nfunction publishMessage(uri: string, topic: string, msg: DomMessage): void {\n  fetch(uri, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJtZXJjdXJlIjp7InB1Ymxpc2giOlsiKiJdfX0.PXwpfIGng6KObfZlcOXvcnWCJOWTFLtswGI5DZuWSK4`,\n    },\n    body: new URLSearchParams({\n      topic,\n      data: JSON.stringify(msg),\n    }),\n  });\n}\n\n// Util to create a unique selector (not perfect but works for simple cases)\nfunction getDomPath(el: HTMLElement): string {\n  const stack: string[] = [];\n  while (el.parentNode) {\n    let sibCount = 0;\n    let sibIndex = 0;\n    for (let i = 0; i < el.parentNode.children.length; i++) {\n      const sibling = el.parentNode.children[i];\n      if (sibling.tagName === el.tagName) {\n        if (sibling === el) {\n          sibIndex = sibCount;\n        }\n        sibCount++;\n      }\n    }\n    const tag = el.tagName.toLowerCase();\n    const selector = sibCount > 1 ? `${tag}:nth-of-type(${sibIndex + 1})` : tag;\n    stack.unshift(selector);\n    el = el.parentNode as HTMLElement;\n  }\n  return stack.slice(1).join(\" > \");\n}\n\nexport function republishDomEvent(\n  uri: string,\n  topic: string,\n  senderId: string,\n  event: Event\n): void {\n  if (event.target && !programmaticEvents[event.type]) {\n    const target = event.target as HTMLElement;\n\n    const msg: DomMessage = {\n      senderId: senderId,\n      type: event.type,\n      params: {\n        selector: getDomPath(target),\n        inputValue:\n          target instanceof HTMLInputElement ||\n          target instanceof HTMLTextAreaElement\n            ? target.value\n            : target instanceof HTMLElement && target.isContentEditable\n            ? target.innerHTML.replace(/&nbsp;/g, \" \") // Replace &nbsp; with a space\n            : target instanceof HTMLSelectElement\n            ? target.value\n            : null,\n        pointer: {\n          x: (event as MouseEvent).clientX,\n          y: (event as MouseEvent).clientY,\n        },\n        scroll: {\n          x: window.scrollX,\n          y: window.scrollY,\n        },\n      },\n    };\n\n    publishMessage(uri, topic, msg);\n  }\n}\n", "import { Message } from \"./types\"; // Assuming Message type is defined\n\n// Store a map of link elements by their href\nlet linkMap: Record<string, HTMLLinkElement> = {};\n\n// Refresh and capture current link elements\nexport function refreshLinks() {\n  linkMap = {}; // Reset the link map before refreshing\n  document.querySelectorAll('link[rel=\"stylesheet\"]').forEach((link) => {\n    if (link instanceof HTMLLinkElement && link.href) {\n      linkMap[new URL(link.href, location.origin).pathname] = link;\n    }\n  });\n}\n\nfunction isExternal(url) {\n  var match = url.match(\n    /^([^:/?#]+:)?(?:\\/\\/([^/?#]*))?([^?#]+)?(\\?[^#]*)?(#.*)?/\n  );\n  if (\n    typeof match[1] === \"string\" &&\n    match[1].length > 0 &&\n    match[1].toLowerCase() !== location.protocol\n  )\n    return true;\n  if (\n    typeof match[2] === \"string\" &&\n    match[2].length > 0 &&\n    match[2].replace(\n      new RegExp(\n        \":(\" + { \"http:\": 80, \"https:\": 443 }[location.protocol] + \")?$\"\n      ),\n      \"\"\n    ) !== location.host\n  )\n    return true;\n  return false;\n}\n\n// Handle the update of CSS content\nfunction handleCss() {\n  for (const path in linkMap) {\n    if (!isExternal(linkMap[path].href)) {\n      linkMap[path].href = `${path}?v=${Date.now()}`;\n    }\n  }\n}\n\n// Reload all external JS files\nfunction handleJs() {\n  document\n    .querySelectorAll<HTMLScriptElement>(\"script[src]\")\n    .forEach((script) => {\n      const newScript = document.createElement(\"script\");\n\n      // Copy attributes\n      Array.from(script.attributes).forEach((attr) => {\n        newScript.setAttribute(attr.name, attr.value);\n      });\n\n      // Set src after copying attributes\n      newScript.src = `${script.src.split(\"?\")[0]}?v=${Date.now()}`;\n\n      script.replaceWith(newScript);\n    });\n}\n\n// Handle refresh messages (either CSS, HTML, or refresh)\nexport function handleRefreshMsg(msg: Message) {\n  switch (msg.type) {\n    case \"refresh\":\n      window.location.reload();\n      break;\n    case \"css\":\n      handleCss();\n      break;\n    case \"js\":\n      handleJs();\n      break;\n  }\n}\n", "import { republishDomEvent } from \"./domPublisher\";\nimport { handleDomMsg } from \"./domSubscriber\";\nimport { handleRefreshMsg, refreshLinks } from \"./refresh\";\nimport { Message } from \"./types\";\n\nfunction generateUUID(): string {\n  // Generate a UUID v4 (random-based UUID)\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0; // Random hex digit\n    const v = c === \"x\" ? r : (r & 0x3) | 0x8; // Correct version 4 format\n    return v.toString(16);\n  });\n}\n\nconst senderId: string = generateUUID();\n\nconst scriptTag = document.getElementById(\"powersync\") as HTMLScriptElement;\nvar uri: string = scriptTag.dataset.eventsUri as string;\n// If protocol & host are omitted from the uri, use the ones in the browser's\n// address bar\nif (uri.startsWith(\":\")) {\n  uri = `${window.location.protocol}//${window.location.hostname}${uri}`;\n}\nconst topic: string = scriptTag.dataset.eventsTopic as string;\nconst url = new URL(uri);\nurl.searchParams.append(\"topic\", topic);\n\n// Setup Event Source\n\nconst eventSource = new EventSource(url);\n\neventSource.onopen = (_) => {\n  console.log(\"eventSource open\");\n};\n\neventSource.onerror = (_) => {\n  console.log(\"eventSource error\");\n};\n\neventSource.onmessage = (event) => {\n  const msg: Message = JSON.parse(event.data);\n\n  // Ignore own messages\n  if (msg.senderId != senderId) {\n    handleDomMsg(msg);\n    handleRefreshMsg(msg);\n  }\n};\n\n// Setup Event Listeners\n\n[\n  \"change\",\n  \"click\",\n  \"input\",\n  \"keydown\",\n  \"keyup\",\n  \"pointerdown\",\n  \"pointermove\",\n  \"pointerup\",\n  \"popstate\",\n  \"pushState\",\n  \"replaceState\",\n  \"reset\",\n  \"scroll\",\n  \"submit\",\n  \"touchend\",\n  \"touchmove\",\n  \"touchstart\",\n].forEach((eventName: string) => {\n  window.addEventListener(\n    eventName,\n    (event) => {\n      republishDomEvent(uri, topic, senderId, event);\n    },\n    true // useCapture = true to catch upstream events\n  );\n});\n\nrefreshLinks();\n"],
  "mappings": "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",
  "names": ["uri", "topic", "senderId", "url"]
}
